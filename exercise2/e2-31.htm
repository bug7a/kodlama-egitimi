
<!DOCTYPE html>
 
<html>
    <head>
        
        <title>Kodlama</title>
        
        <meta charset="UTF-8">
        
        <meta name="description" content="Alıştırma - Çocuklar için kodlama (programlama oyunu)">
        <meta name="keywords" content="Alıştırma - Çocuklar için kodlama (programlama oyunu)">
        <meta name="author" content="Buğra ÖZDEN">        
        
        <meta name="viewport" content="initial-scale=1, width=device-width, user-scalable=no">
        <meta name="format-detection" content="telephone=no">
        <meta name="msapplication-tap-highlight" content="no">
        
        <link rel="stylesheet" type="text/css" href="../css/app.css">
        
        <link rel="stylesheet" type="text/css" href="../css/coding.css">
        <link rel="stylesheet" type="text/css" href="../css/coding2.css">
        
        <link rel="stylesheet" type="text/css" href="../css/exercisex.css">
        <link rel="stylesheet" type="text/css" href="css/exercise2.css">
        
    </head>
    <body>
        
        <div class="colored-background"></div>
        
        <div id="app-cont">
            
            <!-- CLOSE BUTTON -->
            
            <a href="exercise2.htm"><div class="close-btn"><img src="../img/exercisex/close-btn.png" /></div></a>
            
            <!-- QUESTION START -->
            
            <div class="normal-text-group">
                
                <p id="ex-page-number" id-num="31" class="normal-title">31</p>
                
                <!-- <div class="normal-img" ><img src="img/mission-btn.png" width="560" /></div> -->
                
                <p class="normal-text"><span class="normal-bold-text2x">Etkileşim;</span> çarpmak ve yön değiştirmek.</p>
                
                <p class="normal-text"><span class="normal-bold-text2">Örnek;</span> turuncu karenin, siyah iki duvar arasında, mavi kareleri kırarak yoluna devam etmesini sağlayan algoritma.</p>
                
                <!-- <p>Kurallar;</p>
                <p>Mavi boyalı kare iki yönde hareket edebilir. Yukarı veya aşağıya</p>
                <p>Siyah renk kırılamaz ama geri sektirir.</p>
                <p>Beyaz dışındaki renkler kırılır ve geri sektirir.</p>
                <p>Eğer karenin bir sonraki konumu beyaz renk ise kare ilerlemeye devam etsin değilse iki seçenek olabilir siyah veya farklı bir renk</p> -->
                
                <!-- <p class="normal-text">Gözümüz kareyi hareket ediyormuş gibi algılayacaktır.</p>
                
                <p class="normal-text"><span class="normal-bold-text2">Örnek;</span> turuncu karenin 3 birim sağa ve ardından 3 birim aşağıya hareket etmesini sağlayan algoritma.</p> -->
                
            </div>
            
            <!-- QUESTION END -->
            
<!-- EDITOR --><div id="editor-cont1"></div>
            
            <!-- TIPS AND VIDEO -->
            
            <div class="normal-text-group">
                
                <div class="alert-box">
                
                    <div class="alert-centered-bold-title">EK AÇIKLAMA</div>
                    
                    <p>Sadece dikey düzlemde (yukarı, aşağı) harekete izin verilmiştir.</p>
                    
                    <!-- <p>Hareket yönü sadece yukarı veya aşağıya olabilecek şekilde programlanmıştır.</p>
                    
                    <p>- Hareket iki yönlüdür. Yukarıya veya aşağıya.</p> -->
                    
                    <!-- <p>Siyah ve beyaz dışındaki tüm renkler, kırılabilir olarak programlanmıştır.</p> -->
                    
                    <p>Siyah renk duvar, beyaz renk boşuk ve diğer tüm renkler kırılabilir engel olarak programlanmıştır.</p>
                    
                    <!-- <p>Hareket eden kare, sadece yukarıya veya aşağıya doğru ilerleyebilecek şekilde programlanmıştır.</p> -->
                    
                    <!-- <img src="../img/coding2/code/201-color-table.webp" width="520" /> -->

                    <!-- <p>Robotun sahip olduğu anahtar sayısı, <span class="normal-bold-text">robot.anahtar</span> değişkeninden alınmalı.</p> -->

                    <!--<p>Eğer bu kare şeklini, tek bir döngü ile çizdirebilirsek; daha başarılı bir algoritma kurabilmiş oluruz.</p>-->

                </div>
                
                <div onclick="Exercise.gotoYouTubeURL('https://youtu.be/xQs-J2Mn3zQ');" class="normal-img" ><img src="img/desc-video-btn.webp" width="560" /></div>
                
                <a href="e2-32.htm"><div class="normal-sub-img" ><img src="img/next-video-btn.webp" width="560" /></div></a>
                
                <!--<p><a href="../lessons1/lesson2.htm"><span class="exercise1-lesson-btn">Ekrana yazı yazmak</span></a> ve <a href="../lessons1/lesson3.htm"><span class="exercise1-lesson-btn">Değişkenlerin kullanımı</span></a> konularını tamlamış olmanız önerilir.</p>-->
                
                <!-- <div id="t1-btn" class="normal-img" onclick="Exercise.openTip('t1');" ><img src="img/tip-btn.webp" width="560" /></div>
                
                <div id="t1-text" style="display:none;">
                <div class="tip-basci-box"><p>Kare şeklinin ortası beyaz kalmalı.</p></div>
                </div> -->
                
                <!-- <div id="t2-btn" class="normal-sub-img" onclick="Exercise.openTip('t2');" ><img src="img/tip-btn.webp" width="560" /></div>
                
                <div id="t2-text" style="display:none;">
                <div class="tip-basci-box-sub"><p>zemin.sonKonum</p></div>
                </div> -->
                
                <!-- <div onclick="Exercise.gotoYouTubeURL('https://youtu.be/xQs-J2Mn3zQ');" class="normal-sub-img" ><img src="img/video-btn.webp" width="560" /></div> -->
                
                
            </div>
                
            <div class="page-end-spacing"></div>
        
        </div><!-- content end -->

<div id="code-example1" style="display:none">//karenin rengi
var kareRenk = "turuncu"
//karenin koordinatları
var kareX = 10
var kareY = 11
    
//karenin hızı (milisaniye)
var kareHiz = 100
    
//karenin sonraki koordinatları
var sonrakiX = 0
var sonrakiY = 0

//karenin hareket yönü
var kareYon = "yukarı"
//engelle karşılaştığında hareket yönü
var degisecekYon = "aşağı"

//duvarın rengi
var duvarRenk = "siyah"
//boşluk renk
var boslukRenk = "beyaz"

//30 kere tekrar et
for (var i = 1; i &lt;= 36; i++) {
    
    //hareket eden kareyi temizle
    kareTemizle(kareX, kareY)
    
    //eğer karenin hareket yönü yukarıya doğru ise
    if (kareYon == "yukarı") {
    
        //karenin y koordinatını 1 eksilt
        sonrakiX = kareX
        sonrakiY = kareY - 1
    
        //engelle karşılaştığında hareket yönünü değiştir
        degisecekYon = "aşağı"
    
    //eğer karenin hareket yönü aşağıya doğru ise
    } else if (kareYon == "aşağı") {
    
        //karenin y koordinatını 1 arttır
        sonrakiX = kareX
        sonrakiY = kareY + 1
    
        //engelle karşılaştığında hareket yönünü değiştir
        degisecekYon = "yukarı"
    
    }
    
    //yeni konumdaki karenin ne renk olduğunu bir değişkene aktar
    var sonrakiKareRenk = kareNeRenk(sonrakiX, sonrakiY)
    
    //eğer sonraki karenin renk ismi beyaz ise
    if (sonrakiKareRenk == boslukRenk) {
    
        //engel yok, ilerlemeye devam et

        //karenin konumunu taşıyan değişkenleri sonraki konum ile güncelle
        kareX = sonrakiX
        kareY = sonrakiY
    
    //eğer sonraki karenin renk ismi siyah ise
    } else if (sonrakiKareRenk == duvarRenk) {

        //duvar ile karşılaşıldı (engel)

        //bip sesi çıkar
        ses("bip")
        //hareket yönünü değiştir
        kareYon = degisecekYon

    //eğer sonraki karenin renk ismi beyaz veya siyah'dan farklı ise
    } else {

        //farklı bir renk ile karşılaşıldı (kırılabilir engel)

        //hareket eden kareyi temizle
        kareTemizle(sonrakiX, sonrakiY)
        //bip sesi çıkar
        ses("yut")
        //hareket yönünü değiştir
        kareYon = degisecekYon

    }
    
    //hesaplanan hareket eden kareyi yeni konumda boya
    kareBoya(kareX, kareY, kareRenk)
    
    //100 milisaniye bekle
    bekle(kareHiz)
    
}
</div>
        
        <script src="../library/src-noconflict/ace.js" type="text/javascript" charset="utf-8"></script>
        
        <script src="../cordova.js" type="text/javascript" charset="utf-8"></script>
        <script src="../js/app.js" type="text/javascript" charset="utf-8"></script>
        
        <script src="../js/coding.js" type="text/javascript" charset="utf-8"></script>
        <script src="../js/minikeyboard.js" type="text/javascript" charset="utf-8"></script>
        <script src="../js/coding2.js" type="text/javascript" charset="utf-8"></script>
        
        <script src="js/exercise2.js" type="text/javascript" charset="utf-8"></script>
        
        <script>
            
            var editor1;
            
            var Page = function(){};
            
            Page.codingInit = function($e){ 
                 
                Coding.currentEditorNumber = $e.editorNumber;
                
                switch($e.editorNumber){
                       
                    case "1":
                        
                        Coding2.dontUseAnimationEngine = 1;
                        
                        Coding2.init();
                        
                        Coding2.createScreen(19, 15);
                        
                        cizgiSakla();
                        
                        kareBoya(8, 4, "siyah");
                        kareBoya(9, 4, "siyah");
                        kareBoya(10, 4, "siyah");
                        kareBoya(11, 4, "siyah");
                        kareBoya(12, 4, "siyah");
                        
                        kareBoya(8, 5, "mavi");
                        kareBoya(9, 5, "mavi");
                        kareBoya(10, 5, "mavi");
                        kareBoya(11, 5, "mavi");
                        kareBoya(12, 5, "mavi");
                        
                        kareBoya(8, 6, "mavi");
                        kareBoya(9, 6, "mavi");
                        kareBoya(10, 6, "mavi");
                        kareBoya(11, 6, "mavi");
                        kareBoya(12, 6, "mavi");
                        
                        /* kareBoya(8, 7, "sarı");
                        kareBoya(9, 7, "sarı");
                        kareBoya(10, 7, "sarı");
                        kareBoya(11, 7, "sarı");
                        kareBoya(12, 7, "sarı"); */
                        
                        kareBoya(10, 11, "turuncu");
                        
                        kareBoya(8, 12, "siyah");
                        kareBoya(9, 12, "siyah");
                        kareBoya(10, 12, "siyah");
                        kareBoya(11, 12, "siyah");
                        kareBoya(12, 12, "siyah");
                        
                        document.getElementById("mycanvas1").style.zoom = 1.5;
                        
                        Coding2.dontUseAnimationEngine = 0; 
                        
                        break;
                       }
                
            };
            
            Page.codingFinished = function($e){ 
                
                switch($e.editorNumber){
                       
                    case "1":
                        /*
                        var coordinateList = [{x:3,y:4},{x:4,y:4},{x:5,y:4},{x:3,y:5},{x:5,y:5},{x:3,y:6},{x:4,y:6},{x:5,y:4}];
                        
                        var count = 0;
                        
                        for (var i = 0; i < coordinateList.length; i++) {
                            if(kareNeRenk(coordinateList[i].x, coordinateList[i].y) == "siyah") {
                                count++;
                            }
                        }
                        
                        if (count == 8 && kareNeRenk(4, 5) == "beyaz") {
                            
                            //Exercise.showSuccessWindow();
                            //App.setPageScore(Exercise.exID + "-" + Exercise.exPageID, 1);
                            //Coding.saveCode("1", Exercise.codeSavePath);
                            
                        } else {
                            
                            //Exercise.showFailWindow();
                            
                        }
                        */
                        
                        //Coding1.robotPosition = 0;
                        //Coding1.robotEnergy = 0;
                        //Coding1.robotKeyCount = 0;
                        //Coding1.robotDirection = "right";
                        //Coding1.robotEnergySpending = 5;
                        //Coding1.groundMaxPosition = 0;
                        //Coding1.groundMinPosition = 0;
                        /*
                        var consoleText = document.getElementById("coding-console-box1").innerHTML;
                        var printed = consoleText.search("0");
                        var printed2 = consoleText.search("1");
                        
                        var codeText = editor1.getValue();
                        var coded = codeText.search("robot.anahtar");
                        
                        if (printed >= 0 && printed2 >= 0 && coded >= 0) {
                            
                            Exercise.showSuccessWindow();
                            App.setPageScore(Exercise.exID + "-" + Exercise.exPageID, 1);
                            Coding.saveCode("1", Exercise.codeSavePath);
                             
                        }else{
                            
                            Exercise.showFailWindow();
                            
                        }
                        */
                        
                        break;
                        
                       }
            
            };
            
            
            //App.js içerisinden sayfa yüklendiğinde otomatik çalıştırılıyor.
            Page.init = function() {
                
                App.makePageFit("exercise");
                
                Coding.init();
                Exercise.init();
                
                document.addEventListener("onGameRefreshed", Page.codingInit);
                document.addEventListener("onGameStarting", Page.codingInit);
                document.addEventListener("onGameFinished", Page.codingFinished);
                document.addEventListener("onAnimationTurnStarted", Page.animationTurnStarted);
                
                Exercise.createStandartEditor();
                
                Coding.setSnippetIDList("1", ["202", "203", "201", "204", "006", "206"]); //"004",
                //Coding.setSnippetIDList("1", Coding.snippetCodingIDList.concat(Coding.snippetCoding1IDList));
                
                //Başlangıçta sahneleri oluştur.
                Page.codingInit({editorNumber:'1'});
                
                //Başlangıçta otomatik, okundu olarak işaretle.
                App.setPageScore(Exercise.exID + "-" + Exercise.exPageID, 1);
                
                //kayoport aalışveriş merkezi - bodrum sibel hanım
                
            };
        
        </script>
        
    </body>
</html>
