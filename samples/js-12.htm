
<!DOCTYPE html>
 
<html>
    <head>
        
        <title>Kodlama</title>
        
        <meta charset="UTF-8">
        
        <meta name="description" content="Renkleri tara - Çocuklar için kodlama (programlama)">
        <meta name="keywords" content="Renkleri tara - Çocuklar için kodlama (programlama)">
        <meta name="author" content="Buğra ÖZDEN">        
        
        <meta name="viewport" content="initial-scale=1, width=device-width, user-scalable=no">
        <meta name="format-detection" content="telephone=no">
        <meta name="msapplication-tap-highlight" content="no">
        
        <link rel="stylesheet" type="text/css" href="../css/app.css">
        <link rel="stylesheet" type="text/css" href="../css/samples.css">
        <link rel="stylesheet" type="text/css" href="../css/basic-editor.css">
        <link rel="stylesheet" type="text/css" href="../basic/kutuphane/basic-1.3.css">
        
        <script src="../library/src-noconflict/ace.js" type="text/javascript" charset="utf-8"></script>
        <script src="../cordova.js" type="text/javascript" charset="utf-8"></script>
        <script src="../js/app.js" type="text/javascript" charset="utf-8"></script>
        <script src="../js/basic-editor.js" type="text/javascript" charset="utf-8"></script>
        <script src="../js/basic-minikeyboard.js" type="text/javascript" charset="utf-8"></script>
        <script src="../basic/kutuphane/basic-1.3.js" type="text/javascript" charset="utf-8"></script>
        
        <style>
        
        .alert-yellow { position:relative;background-color: #F6F6F6;font-family: roboto;margin: 20px;margin-top: 40px;margin-bottom: 40px;padding: 20px;padding-top: 10px;padding-bottom: 10px; color:#4A4A4A;border-radius: 8px;font-size: 18px;text-align: justify;/* line-height: 100%; */ }

        .alert-centered-bold-title { display: block;color:#4A4A4A; font-family: roboto-bold;text-align: center;padding-top: 20px}

        
        </style>
        
        <script>
            
            // var start;
            
            var editor1;
            
            var Page = function(){};
            
            Page.codingInit = function($e){ 
                 
                Coding.currentEditorNumber = $e.editorNumber;
                
                switch($e.editorNumber){
                    
                    case "1":
                        
                        break;
                    
                    }
                
            };
            
            Page.codingFinished = function($e){
                
                switch($e.editorNumber){
                       
                    case "1":
                        
                        break; 
                        
                   }
            
            };
            
            //App.js içerisinden sayfa yüklendiğinde otomatik çalıştırılıyor.
            Page.init = function() {
                
                App.makePageFit("sample");
                
                Coding.init();
                
                document.addEventListener("onGameStarting", Page.codingInit);
                document.addEventListener("onGameStarted", Page.codingFinished);
                document.addEventListener("onGameFinished", Page.codingFinished);
                
                Coding.setOption("1", "resetButtonEnabled", 1);
                //Coding.setOption("1", "saveButtonEnabled", "code-js-s1"); //sample saving path: "code-e2-1"
                
                Coding.createNewEditorHTML("1");
                Coding.setScreenColor("1", "white"); //#F6F6F6, #D8D8D8
                Coding.setScreenHeight("1", "700px");
                editor1 = ace.edit("editor1");
                //editor1.setReadOnly(true);
                Coding.createNewEditor("1");
                Coding.setSnippetIDList("1", Coding.snippetCodingIDList);
                
                // Eğer resetButton aktif ise
                Coding.insertCodeToEditor("1", Coding.getCodeFromDivID("code-example1"));
                // Eğer saveButton aktif ise
                //Coding.insertCodeToEditor("1", Coding.getCodeFromDivID("code-example1"), "code-js-s1");
                
                //Başlangıçta sahneleri oluştur.
                Page.codingInit({editorNumber:'1'});
                
                //App.setPageScore("lesson6", 1);
                
            };
            
            
            
        
        </script>

    </head>
    <body>
        
        <div id="app-cont">
            
            <div class="project-title-box">
                
                <img src="../img/samples/project-title-black.png" width="600" />
                
                <a href="../pages/samples.htm"><div class="project-close-btn"></div></a>
                
                <div id="project-title" class="project-title">Hesap Makinesi</div>
            
            </div>
            
<!-- 1 --><div id="editor-cont1"></div>
            
            <div class="normal-text-group">
                
            </div>
            
            
            <div class="page-end-spacing"></div>
        
        </div><!-- content -->

<div id="code-example1" style="display:none">// DEĞİŞKENLER
        
// İşlem sonuçlarının görüneceği metin kutusu. (Label)
var lblEkran
// İşlem yapılacak 1. sayı.
var sayi1 = ""
// İşlem yapılacak 2. sayı.
var sayi2 = ""
// İşlem yapılacak matematik operatörü +, -, * veya / olabilir.
var isaret = ""
// İşlem sonucunu taşıyan değişken.
var sonuc = ""

// FONKSİYONLAR

// İlk çalışan fonksiyon.
var start = function() {

    // Sayfanın arka plan rengini belirle.
    page.color = "whitesmoke"
    
    // EKRAN Parametreler: left, top, width, height
    lblEkran = new Label(50, 50, 435, "auto")
    lblEkran.text = "0"
    //metin boyutunu belile (pixel cinsinden)
    lblEkran.fontSize = 40

    // DÜĞMELER
    for (var i = 0; i &lt;= 3; i++) {
        for (var k = 0; k &lt;= 2; k++) {

            // Yeni düğme (Button) nesnesi oluştur.
            var btnDugme = new Button()
            // Font boyutu.
            btnDugme.fontSize = 50
            // Düğmnin metnini belirle 1 den 12 ye kadar.
            btnDugme.text = (i * 3) + (k + 1)
            // genişlik: 100px, yükseklik: 100px olarak belirle.
            btnDugme.width = 100
            btnDugme.height = 100
            // Üst boşluk: 150px, button yüksekliği: 100px, button arası boşluk: 10px
            btnDugme.top = 150 + (110 * i)
            // Sol boşluk: 50px, button genişliği: 100px, button arası boşluk: 10px
            btnDugme.left = 50 + (110 * k)
            // Düğmenin arka plan rengini gri olarak belirle.
            btnDugme.color = "lightgray"
            
            // Eğer düğme metni, 10 dan küçük ise,
            if (btnDugme.text &lt; 10) {
                //1 den 9 a kadar olan sayılar için,
                btnDugme.addEventListener("click", sayiEkle)
                
            // Eğer düğme metni 10 ise,
            } else if (btnDugme.text == 10) {
                // Düğmenin metnini 0 olarak belirle.
                btnDugme.text = 0
                // Düğmeye basıldığında, sayiEkle fonksiyonunu çalıştır.
                btnDugme.addEventListener("click", sayiEkle)
                
            // Eğer düğme metni 11 ise,
            } else if (btnDugme.text == 11) {
                // Düğmenin yazısını "C" olarak belirle.
                btnDugme.text = "C"
                // Düğmeye basıldığında temizle fonksiyonunu çalıştır.
                btnDugme.addEventListener("click", temizle)
                
            // Eğer düğme metni 12 ise,
            } else if (btnDugme.text == 12) {
                // Düğmenin yazısını "=" olarak belirle.
                btnDugme.text = "="
                // Düğmenin rengini turuncu olarak belirle.
                btnDugme.color = "orange"
                // Düğmeye basıldığında sonucuHesapla fonksiyonunu çalıştır.
                btnDugme.addEventListener("click", sonucuHesapla)
                
            }
            
        }
    }

    // OPERATÖR DÜĞMELERİ
    for (var i = 0; i &lt;= 3; i++) {

        // Yeni düğme (Button) nesnesi oluştur
        var btnDugme = new Button()
        // Font boyutu.
        btnDugme.fontSize = 50
        // Genişlik: 150px, yükseklik: 100px olarak belirle
        btnDugme.width = 150
        btnDugme.height = 100
        // Üst boşluk: 150px, button yüksekliği: 100px, button arası boşluk: 10px
        btnDugme.top = 150 + (110 * i)
        // Sol boşluk: 390px
        btnDugme.left = 390
        // Düğmenin arka plan rengini belirle.
        btnDugme.backgroundColor = "default"
        // Düğmeye basıldığında isaretSec fonksiyonunu çalıştır.
        btnDugme.addEventListener("click", isaretSec)

        // Duğme nesnelerinin metinlerini ayarla.
        if (i == 0) {
            btnDugme.text = "+"
            
        } else if (i == 1) {
            btnDugme.text = "-"
            
        } else if (i == 2) {
            btnDugme.text = "*"
            
        } else {
            btnDugme.text = "/"
            
        }

    }

}

// DİĞER FONKSİYONLAR

// Yeni bir sayının girişini yapan fonksiyon.
var sayiEkle = function(basilanDugme) {
    
    // Eğer isaret değişkeninin içeriği boş ise,
    if (isaret == "") {
        // İlk sayı giriliyor.
        sayi1 = sayi1 + basilanDugme.text
        // Ekranı güncelle.
        lblEkran.text = sayi1
        
    } else {
        // İkinci sayı giriliyor.
        sayi2 = sayi2 + basilanDugme.text
        // Ekranı güncelle.
        lblEkran.text = sayi2
        
    }
    
}

// İşareti seçen fonksiyon.
var isaretSec = function(basilanDugme) {
    
    // Hangi işlemin seçildiğini değişkene aktar.
    isaret = basilanDugme.text
    // Ekranda bu işlemin işaretini göster.
    lblEkran.text = basilanDugme.text
    
}

// Tüm işlemleri temizleyen fonksiyon.
var temizle = function(basilanDugme) {
    
    // Değişkenlerin içeriklerini temizle.
    sayi1 = ""
    sayi2 = ""
    isaret = ""

    // Ekranı 0 yap.
    lblEkran.text = "0"
    
}

// Sonucu hesaplayıp, ekranda gösteren fonksiyon.
var sonucuHesapla = function(basilanDugme) {
    
    // İsaret değişkeninin içeriğine göre işlem yap.
    if(isaret == "+") {
        // TOPLAMA
        
        sonuc = num(sayi1) + num(sayi2)

        // Not: num(metin) fonksiyonu,
        // metin olarak gönderilen parametrenin, 
        // sayıya çevrilmiş halini cevap verir.
        
    } else if (isaret == "-") {
        // ÇIKARMA
        sonuc = num(sayi1) - num(sayi2)
        
    } else if (isaret == "*") {
        // ÇARMA
        sonuc = num(sayi1) * num(sayi2)
        
    } else if (isaret == "/") {
        // BÖLME
        sonuc = num(sayi1) / num(sayi2)
        
    }

    // Değişkenlerin içeriklerini temizele.
    temizle()

    // İşlem sonucunu ekranda göster.
    lblEkran.text = "= " + sonuc
    
}
</div>        
</body>
</html>
