
<!DOCTYPE html>
 
<html>
    <head>
        
        <title>Kodlama</title>
        
        <meta charset="UTF-8">
        
        <meta name="description" content="Renkleri tara - Çocuklar için kodlama (programlama)">
        <meta name="keywords" content="Renkleri tara - Çocuklar için kodlama (programlama)">
        <meta name="author" content="Buğra ÖZDEN">        
        
        <meta name="viewport" content="initial-scale=1, width=device-width, user-scalable=no">
        <meta name="format-detection" content="telephone=no">
        <meta name="msapplication-tap-highlight" content="no">
        
        <link rel="stylesheet" type="text/css" href="../css/app.css">
        <link rel="stylesheet" type="text/css" href="../css/samples.css">
        <link rel="stylesheet" type="text/css" href="../css/basic-editor.css">
        <link rel="stylesheet" type="text/css" href="../basic/kutuphane/basic-1.3.css">
        
        <script src="../library/src-noconflict/ace.js" type="text/javascript" charset="utf-8"></script>
        <script src="../cordova.js" type="text/javascript" charset="utf-8"></script>
        <script src="../js/app.js" type="text/javascript" charset="utf-8"></script>
        <script src="../js/basic-editor.js" type="text/javascript" charset="utf-8"></script>
        <script src="../js/basic-minikeyboard.js" type="text/javascript" charset="utf-8"></script>
        <script src="../basic/kutuphane/basic-1.3.js" type="text/javascript" charset="utf-8"></script>
        
        <style>
        
        .alert-yellow { position:relative;background-color: #F6F6F6;font-family: roboto;margin: 20px;margin-top: 40px;margin-bottom: 40px;padding: 20px;padding-top: 10px;padding-bottom: 10px; color:#4A4A4A;border-radius: 8px;font-size: 18px;text-align: justify;/* line-height: 100%; */ }

        .alert-centered-bold-title { display: block;color:#4A4A4A; font-family: roboto-bold;text-align: center;padding-top: 20px}

        
        </style>
        
        <script>
            
            // var start;
            
            var editor1;
            
            var Page = function(){};
            
            Page.codingInit = function($e){ 
                 
                Coding.currentEditorNumber = $e.editorNumber;
                
                switch($e.editorNumber){
                    
                    case "1":
                        
                        break;
                    
                    }
                
            };
            
            Page.codingFinished = function($e){
                
                switch($e.editorNumber){
                       
                    case "1":
                        
                        break; 
                        
                   }
            
            };
            
            //App.js içerisinden sayfa yüklendiğinde otomatik çalıştırılıyor.
            Page.init = function() {
                
                App.makePageFit("sample");
                
                Coding.init();
                
                document.addEventListener("onGameStarting", Page.codingInit);
                document.addEventListener("onGameStarted", Page.codingFinished);
                document.addEventListener("onGameFinished", Page.codingFinished);
                
                Coding.setOption("1", "resetButtonEnabled", 1);
                //Coding.setOption("1", "saveButtonEnabled", "code-js-s1"); //sample saving path: "code-e2-1"
                
                Coding.createNewEditorHTML("1");
                Coding.setScreenColor("1", "white"); //#F6F6F6, #D8D8D8
                Coding.setScreenHeight("1", "640px");
                editor1 = ace.edit("editor1");
                //editor1.setReadOnly(true);
                Coding.createNewEditor("1");
                Coding.setSnippetIDList("1", Coding.snippetCodingIDList);
                
                // Eğer resetButton aktif ise
                Coding.insertCodeToEditor("1", Coding.getCodeFromDivID("code-example1"));
                // Eğer saveButton aktif ise
                //Coding.insertCodeToEditor("1", Coding.getCodeFromDivID("code-example1"), "code-js-s1");
                
                //Başlangıçta sahneleri oluştur.
                Page.codingInit({editorNumber:'1'});
                
                //App.setPageScore("lesson6", 1);
                
            };
            
            
            
        
        </script>

    </head>
    <body>
        
        <div id="app-cont">
            
            <a href="../pages/samples.htm"><div class="close-btn"><img src="../img/samples/sample-close-btn.png" /></div></a>
            
            <div onclick="App.gotoYouTubeURL('https://www.youtube.com/watch?v=DQBqankxnUM');" class="video-btn"><img src="../img/samples/video-btn.png" /></div>
            
            <!-- TEXT GROUP START -->
            
            <div class="normal-text-group">
                
            <p class="normal-title">Tic-Tac-Toe (xox)</p>
                
                <p>Üç'e üç (3x3) bir alan üzerinde, boş karelere basarak; "x" veya "o" sembolu olarak işaretliyor.</p>
   
<p class="normal-bold-text2">Oyunun Oynanışı:</p>
<ul>
    <li>Bir oyuncu "x", diğeri ise "o" sembolünü kullanır.</li>
    <li>Sıra ile, boş karelerden birine kendi sembollerini koyarak devam ederler.</li>
    <li>Kendi sembolünden üç tane yatay, dikey veya çapraz olarak 
      yan yana ilk getiren oyuncu, bir puan kazanır.</li>
    <li>Boş kareler dolana kadar, kimse başarılı olamaz ise berabere olur. Ve oyun yeniden başlatılır.</li>
</ul>

                <!-- <p>Yılanı oluşturan karelerin koordinatları, <span class="normal-bold-text">noktalar</span> isminde bir dizi değişkeninde saklanıyor. </p>
                <p><span class="normal-bold-text">ilerle()</span> fonksiyonu, yılanın bir birim ilerlemesini sağlıyor.</p> -->

            </div>
            
            <!-- TEXT GROUP END -->
            
<!-- 1 --><div id="editor-cont1"></div>
            
            <div class="normal-text-group">

                <p class="normal-bold-text2">Çalışma Mantığı:</p>
      
                <ul>
                    <li>Her bir alan, bir resim nesnesidir.</li>
                    <li>Üzerine basılan nesne, kendine sıradaki sembolün resim dosyasını yüklüyor.</li>
                </ul>
          
                <p class="normal-bold-text2">Geliştirme Önerileri:</p>
      
                <ul>
                <li>Oyun bittiğinde, yeniden başlatma düğmesi eklenebilir.</li>
                <li>Skorları tutmak için, bir bölüm geliştirilebilir.
                    Örneğin: Her kullanıcı için bir skor etiketi ve 
                    onları arttıran birer düğme.</li>
                <li>(ZOR) Kazananı otomatik tespit edip, skorunu arttıran ve
                    yeni oyun başlatan bir algoritma eklenebilir.</li>
                <li>Başka ne geliştirme yapılabilir diye düşünüp, tasarlayın ve geliştirmeye çalışın.</li>
                </ul>

            </div>
            
            
            <div class="page-end-spacing"></div>
        
        </div><!-- content -->

<div id="code-example1" style="display:none">// Sıranın kimde olduğunu saklayan değişken.
var siraKimde = "x"

// Not: resimDegistir() fonksiyonu, ilk çalıştığında "x" eklemesi için,
// siraKimde değişkeni tanımlanırken, "x" değeri aktarılmıştır.

// İlk çalıştırılan fonksiyon.
var start = function() {
    
    // Sayfanın arka plan rengini beyaz duman olarak belirle.
    page.color = "whitesmoke"
    
    // 3 x 3 tane resim nesnesini ekranda oluştur ve hizala.
    for (var y = 0; y &lt;= 2; y++) {
        for (var x = 0; x &lt;= 2; x++) {
            
            // Bir resim nesnesi oluştur.
            createImage()
            that.load("resimler/xox-bos.png")
            that.width = 150
            that.height = 150
            // Döngü sayılarına göre nesneleri hizala.
            that.left = 40 + (180 * x)
            that.top = 40 + (180 * y)
            // Nesneye taşıması için bir bilgi ekleyelim.
            that.value = "bos"
            // Üzerine basıldığında fonksiyonu çalıştır.
            that.onClick(resimDegistir)
            
            // Not: that, en son oluşturulan nesnenin taşındığı bir değişkendir.
            
            // Not: Bu örnekte, 9 tane resim nesnesi oluşturulmuştur. 
            // Ve bu nesneler değişkenlere aktarılmamıştır.
            // Sonradan ulaşabileceğimiz özel isimleri yoktur.
            
        }
    }

}

// Resimlerden birine basıldığında çalışan fonksiyon.
var resimDegistir = function(basilanDugme) {
    
    // Not: Bir nesneye basıldığında, 
    // nesnenin kendisi parametre olarak gönderilir.
    
    // Nesnenin, taşıdığı değer boş ise,
    // (Demek ki; bir sembol seçilmemiş ve resme basılabilir.)
    if (basilanDugme.value == "bos") {
    
        // Sıra "x" sembolünde ise,
        if (siraKimde == "x") {
            
            // Basılan nesnenin özelliklerini düzenle.
            // "x" sembolunun resmini yükle.
            basilanDugme.load("resimler/xox-x.png")
            // Taşınan değeri "x" olarak düzenle.
            basilanDugme.value = "x"
            // Sıradaki sembolu "o" olarak düzenle.
            siraKimde = "o"
            
        } else if (siraKimde == "o") {
            
            // Veya sıra "o" sembolünde ise, aynı işlemleri onun için yap.
            
            basilanDugme.load("resimler/xox-o.png")
            basilanDugme.value = "o"
            siraKimde = "x"
            
        }
        
    }
    
}
</div>        
</body>
</html>
